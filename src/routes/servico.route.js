import express from 'express';
const router = express.Router()

// Importando models
import Salao from '../models/salao.model.js' // Importando modelo Salao

// Importando controllers
import {
  createServico,
  getServicos,
  getServicoById,
  updateServico,
  deleteServico,
} from '../controllers/servico.controller.js'

// Middleware para verificar se o token JWT est√° presente e v√°lido
import { verificarToken } from "../middlewares/autenticacao.middleware.js";

// Middleware para verificar se o usu√°rio √© dono do sal√£o
import { verificaDonoRecurso } from "../middlewares/verificaDonoRecurso.middleware.js";

// üîì Rotas p√∫blicas
router.get("/:salaoId", getServicos); // Listar servi√ßos de um sal√£o
router.get("/:salaoId/:id", getServicoById); // Listar um servi√ßo espec√≠fico
// router.get("/:salaoId/horarios", getHorarios); // Listar hor√°rios dispon√≠veis do sal√£o

// // üîí Rotas protegidas (apenas donos do sal√£o podem gerenciar servi√ßos e hor√°rios)
router.post("/:salaoId", verificarToken, verificaDonoRecurso(Salao), createServico); // Criar servi√ßo
router.patch("/:salaoId/:id", verificarToken, verificaDonoRecurso(Salao), updateServico); // Atualizar servi√ßo
router.delete("/:salaoId/:id", verificarToken, verificaDonoRecurso(Salao), deleteServico); // Deletar servi√ßo

// router.post("/:salaoId/horarios", verificarToken, verificaDonoRecurso(Salao), createHorario); // Criar hor√°rio
// router.delete("/:salaoId/horarios/:id", verificarToken, verificaDonoRecurso(Salao), deleteHorario); // Remover hor√°rio

export default router;
